#include <stdio.h>
#include <string.h>

int main() {
    int i, j, keylen, msglen, flag = 0;
    char input[100], key[30], temp[30], quot[100], rem[30], key1[30];

    printf("Enter Data: ");
    scanf("%s", input);

    printf("Enter Key: ");
    scanf("%s", key);

    keylen = strlen(key);
    msglen = strlen(input);

    strcpy(key1, key);

    // Append zero bits to the input data
    for (i = 0; i < keylen - 1; i++) {
        input[msglen + i] = '0';
    }
    input[msglen + keylen - 1] = '\0';

    // Copy the first key-length bits to the temporary array
    for (i = 0; i < keylen; i++) {
        temp[i] = input[i];
    }

    // Perform division using XOR operation
    for (i = 0; i < msglen; i++) {
        quot[i] = temp[0];
        if (quot[i] == '0') {
            for (j = 0; j < keylen; j++) {
                key[j] = '0';
            }
        } else {
            for (j = 0; j < keylen; j++) {
                key[j] = key1[j];
            }
        }

        // Perform XOR and shift
        for (j = keylen - 1; j > 0; j--) {
            rem[j - 1] = (temp[j] == key[j]) ? '0' : '1';
        }

        // Bring down the next bit
        rem[keylen - 1] = input[i + keylen];
        strcpy(temp, rem);
    }

    strcpy(rem, temp);

    // Print quotient
    printf("Quotient is: ");
    for (i = 0; i < msglen; i++) {
        printf("%c", quot[i]);
    }
    printf("\n");

    // Print remainder
    printf("Remainder is: ");
    for (i = 0; i < keylen - 1; i++) {
        printf("%c", rem[i]);
    }
    printf("\n");

    // Print final transmitted data
    printf("Final Data is: ");
    for (i = 0; i < msglen; i++) {
        printf("%c", input[i]);
    }
    for (i = 0; i < keylen - 1; i++) {
        printf("%c", rem[i]);
    }
    printf("\n");

    return 0;
}
